services: docker
env:
  global:
    - IMAGE_NAME: devzx/litecoin
    - IMAGE_VERSION: 0.18.1
    - secure: mja6DWcqCCcev+qM0PsB/DDdKzLjJlfzGxwrawUu8w+LkwFWZm5VzIkE/Hux0onTFBnVlotHApFxUAxhzVNLJoVF4rMrZdyDDPkNsG4cgWTUxPdUTCfTH8qc2SFSR7ouN11j4z4gRo9B4kNTTlfu/t5uijubcmKO5NrB3l0suHjVWyUB7Nc5w6rhw2lNFHMZHCseEzuo4YZEzo57J2yzemjLquniH+wlXPzhI1X/Tl8SA1YtTDN/MmVQrTb978rhq278c6OFHtMA4+J6hnx84AqTWanvdmc48mw9TX8HNeXHW7NQGxiICc7e/fRLmhG0Rp0G52S22uhKR8GNLk0pF4W1U1ioxtlCHXO2J3RXIBSLboZk0ySF1xrCPp4/iGoFLSX22c23aUVLHqTW5+INU8B5oqIE2/Yx8f3mLspEU6v7JS5cio8a3PMSp4KY/csQ2qMlOaYASaw8+OJUp5htW7Fp5lGdqqYrioHVHi6K8b/eqdNkfRID57gdJUPkMRpRg25bSiD+0xFjGlOgWN4bZadLdZLyulsWF72XB7JSPeSdEtViSEjGNXzWOrBX9+Ro4F+v8m5hDbNn8EDVYNWoPDRKdlFb7pnS+UBa+8Pqw8zJy0mbA/tnMecjgvMDOVf5Q+G7C0cVvo2cgwxJ46oA2erlwVw+2C7sJC9lkR3UnpE=
    - secure: FHEWmbWKExSVeKmRfHJSRHfcZt3ntNqaurI2eeqSwxx4RJ4KBPBr3Ckg4+OOjXLjJLAdCgraz/DbIVlnpWtlbwkeDbcOKS3lt9WzH5uk4t2q2UUsTskgXLy6WSiep/sKqv1MPsqAfnppUtEaOeLs1vBk5Ulm1dkktWLfTGzZ+oE020zfLnxc2aDa0KSJmfKUY/Y8B3miR6bYLxO8SbGTr373+oDSWbYfH7b76HsGCbflgY+NZRvRreRSB1WD3zYE6zTmy8EtMU+4K6B3UrnlGRj/kMUxEBBe/f8hSnL8xXR3CXBE0QgQYHDJy72+FjAwk2fazKB18IYh6hYPcnHp+6tWMfUXe9hbslrsiLuv4jKpTxjpUHEWab1GReQFADOQOYBf+uAf6bUVqiaIaigcZvJrBAcDFxpNvhZgF0Ux9XjA7XaWh2SypLLCDpW5gk+D2vOw7zPcl4mE6kO+UCYUbxS9a2GnB88m5BQoUTelpoRohYu/Q3P7x5PMMLz6ENVVRWT2ImcSiNofHonOVxlzAh3uwJej/u/ZW9d5uP85HM5Qol0yYOgmAJFIhfIZMUvIcPdKZ5QHyuUGPr6c9x1U3BkLLKv4klCxK5yaNrj293OHlZ2jQRol0+jbTayGmk3xj6ObDnzhOJyvW4mxc/qnrtva8KFDioMoXlPNGTkBhfk=

stages:
  - name: build
    if: branch != master
  - name: build push tag
    if: branch == master
  - name: deploy
    if: branch == master

jobs:
  include:
    - stage: build
      script:
        - docker build --build-arg VERSION=$IMAGE_VERSION -t $IMAGE_NAME:$IMAGE_VERSION .

    - stage: build push tag
      script:
        - docker build --build-arg VERSION=$IMAGE_VERSION -t $IMAGE_NAME:$IMAGE_VERSION .
        - echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
        - docker push $IMAGE_NAME:$IMAGE_VERSION
        # Tag and push
        # - git tag $IMAGE_VERSION
        # - git push origin $IMAGE_VERSION

    - stage: deploy
      script:
        # Placeholder for deploying to an actual cluster replace with: helm / updating a gitops deployment repo / simply using kubectl etc
        # For the puropses of this test I'm opting to deploy to kind
        - curl -LOfSs "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        - curl -LOfSs "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
        - echo "$(<kubectl.sha256) kubectl" | sha256sum -c --status
        - chmod +x ./kubectl
        - curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
        - chmod +x ./kind
        - ./kind create cluster --name kraken --config kind-config.yaml
        - ./kubectl create -f statefulset.yaml
        - ./kubectl rollout status -n litecoin statefulset/litecoin
